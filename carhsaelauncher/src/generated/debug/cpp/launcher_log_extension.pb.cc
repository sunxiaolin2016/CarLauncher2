// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: launcher_log_extension.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "launcher_log_extension.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace userevent {

namespace {

const ::google::protobuf::Descriptor* LauncherEventExtension_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LauncherEventExtension_reflection_ = NULL;
const ::google::protobuf::Descriptor* TargetExtension_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TargetExtension_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_launcher_5flog_5fextension_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_launcher_5flog_5fextension_2eproto() {
  protobuf_AddDesc_launcher_5flog_5fextension_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "launcher_log_extension.proto");
  GOOGLE_CHECK(file != NULL);
  LauncherEventExtension_descriptor_ = file->message_type(0);
  static const int LauncherEventExtension_offsets_[1] = {
  };
  LauncherEventExtension_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LauncherEventExtension_descriptor_,
      LauncherEventExtension::internal_default_instance(),
      LauncherEventExtension_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LauncherEventExtension, _has_bits_),
      -1,
      -1,
      sizeof(LauncherEventExtension),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LauncherEventExtension, _internal_metadata_));
  TargetExtension_descriptor_ = file->message_type(1);
  static const int TargetExtension_offsets_[1] = {
  };
  TargetExtension_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TargetExtension_descriptor_,
      TargetExtension::internal_default_instance(),
      TargetExtension_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TargetExtension, _has_bits_),
      -1,
      -1,
      sizeof(TargetExtension),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TargetExtension, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_launcher_5flog_5fextension_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LauncherEventExtension_descriptor_, LauncherEventExtension::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TargetExtension_descriptor_, TargetExtension::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_launcher_5flog_5fextension_2eproto() {
  LauncherEventExtension_default_instance_.Shutdown();
  delete LauncherEventExtension_reflection_;
  TargetExtension_default_instance_.Shutdown();
  delete TargetExtension_reflection_;
}

void protobuf_InitDefaults_launcher_5flog_5fextension_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  LauncherEventExtension_default_instance_.DefaultConstruct();
  TargetExtension_default_instance_.DefaultConstruct();
  LauncherEventExtension_default_instance_.get_mutable()->InitAsDefaultInstance();
  TargetExtension_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_launcher_5flog_5fextension_2eproto_once_);
void protobuf_InitDefaults_launcher_5flog_5fextension_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_launcher_5flog_5fextension_2eproto_once_,
                 &protobuf_InitDefaults_launcher_5flog_5fextension_2eproto_impl);
}
void protobuf_AddDesc_launcher_5flog_5fextension_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_launcher_5flog_5fextension_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\034launcher_log_extension.proto\022\tusereven"
    "t\"\030\n\026LauncherEventExtension\"\021\n\017TargetExt"
    "ensionB4\n\033com.demo.launcher.usereventB\025L"
    "auncherLogExtensions", 140);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "launcher_log_extension.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_launcher_5flog_5fextension_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_launcher_5flog_5fextension_2eproto_once_);
void protobuf_AddDesc_launcher_5flog_5fextension_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_launcher_5flog_5fextension_2eproto_once_,
                 &protobuf_AddDesc_launcher_5flog_5fextension_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_launcher_5flog_5fextension_2eproto {
  StaticDescriptorInitializer_launcher_5flog_5fextension_2eproto() {
    protobuf_AddDesc_launcher_5flog_5fextension_2eproto();
  }
} static_descriptor_initializer_launcher_5flog_5fextension_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LauncherEventExtension::LauncherEventExtension()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_launcher_5flog_5fextension_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:userevent.LauncherEventExtension)
}

void LauncherEventExtension::InitAsDefaultInstance() {
}

LauncherEventExtension::LauncherEventExtension(const LauncherEventExtension& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:userevent.LauncherEventExtension)
}

void LauncherEventExtension::SharedCtor() {
  _cached_size_ = 0;
}

LauncherEventExtension::~LauncherEventExtension() {
  // @@protoc_insertion_point(destructor:userevent.LauncherEventExtension)
  SharedDtor();
}

void LauncherEventExtension::SharedDtor() {
}

void LauncherEventExtension::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LauncherEventExtension::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LauncherEventExtension_descriptor_;
}

const LauncherEventExtension& LauncherEventExtension::default_instance() {
  protobuf_InitDefaults_launcher_5flog_5fextension_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<LauncherEventExtension> LauncherEventExtension_default_instance_;

LauncherEventExtension* LauncherEventExtension::New(::google::protobuf::Arena* arena) const {
  LauncherEventExtension* n = new LauncherEventExtension;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LauncherEventExtension::Clear() {
// @@protoc_insertion_point(message_clear_start:userevent.LauncherEventExtension)
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LauncherEventExtension::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:userevent.LauncherEventExtension)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:userevent.LauncherEventExtension)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:userevent.LauncherEventExtension)
  return false;
#undef DO_
}

void LauncherEventExtension::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:userevent.LauncherEventExtension)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:userevent.LauncherEventExtension)
}

::google::protobuf::uint8* LauncherEventExtension::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:userevent.LauncherEventExtension)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:userevent.LauncherEventExtension)
  return target;
}

size_t LauncherEventExtension::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:userevent.LauncherEventExtension)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LauncherEventExtension::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:userevent.LauncherEventExtension)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const LauncherEventExtension* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LauncherEventExtension>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:userevent.LauncherEventExtension)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:userevent.LauncherEventExtension)
    UnsafeMergeFrom(*source);
  }
}

void LauncherEventExtension::MergeFrom(const LauncherEventExtension& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:userevent.LauncherEventExtension)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void LauncherEventExtension::UnsafeMergeFrom(const LauncherEventExtension& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void LauncherEventExtension::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:userevent.LauncherEventExtension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LauncherEventExtension::CopyFrom(const LauncherEventExtension& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:userevent.LauncherEventExtension)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool LauncherEventExtension::IsInitialized() const {

  return true;
}

void LauncherEventExtension::Swap(LauncherEventExtension* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LauncherEventExtension::InternalSwap(LauncherEventExtension* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LauncherEventExtension::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LauncherEventExtension_descriptor_;
  metadata.reflection = LauncherEventExtension_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LauncherEventExtension

inline const LauncherEventExtension* LauncherEventExtension::internal_default_instance() {
  return &LauncherEventExtension_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TargetExtension::TargetExtension()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_launcher_5flog_5fextension_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:userevent.TargetExtension)
}

void TargetExtension::InitAsDefaultInstance() {
}

TargetExtension::TargetExtension(const TargetExtension& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:userevent.TargetExtension)
}

void TargetExtension::SharedCtor() {
  _cached_size_ = 0;
}

TargetExtension::~TargetExtension() {
  // @@protoc_insertion_point(destructor:userevent.TargetExtension)
  SharedDtor();
}

void TargetExtension::SharedDtor() {
}

void TargetExtension::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TargetExtension::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TargetExtension_descriptor_;
}

const TargetExtension& TargetExtension::default_instance() {
  protobuf_InitDefaults_launcher_5flog_5fextension_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TargetExtension> TargetExtension_default_instance_;

TargetExtension* TargetExtension::New(::google::protobuf::Arena* arena) const {
  TargetExtension* n = new TargetExtension;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TargetExtension::Clear() {
// @@protoc_insertion_point(message_clear_start:userevent.TargetExtension)
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TargetExtension::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:userevent.TargetExtension)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:userevent.TargetExtension)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:userevent.TargetExtension)
  return false;
#undef DO_
}

void TargetExtension::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:userevent.TargetExtension)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:userevent.TargetExtension)
}

::google::protobuf::uint8* TargetExtension::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:userevent.TargetExtension)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:userevent.TargetExtension)
  return target;
}

size_t TargetExtension::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:userevent.TargetExtension)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TargetExtension::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:userevent.TargetExtension)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TargetExtension* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TargetExtension>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:userevent.TargetExtension)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:userevent.TargetExtension)
    UnsafeMergeFrom(*source);
  }
}

void TargetExtension::MergeFrom(const TargetExtension& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:userevent.TargetExtension)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TargetExtension::UnsafeMergeFrom(const TargetExtension& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TargetExtension::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:userevent.TargetExtension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TargetExtension::CopyFrom(const TargetExtension& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:userevent.TargetExtension)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TargetExtension::IsInitialized() const {

  return true;
}

void TargetExtension::Swap(TargetExtension* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TargetExtension::InternalSwap(TargetExtension* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TargetExtension::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TargetExtension_descriptor_;
  metadata.reflection = TargetExtension_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TargetExtension

inline const TargetExtension* TargetExtension::internal_default_instance() {
  return &TargetExtension_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace userevent

// @@protoc_insertion_point(global_scope)
