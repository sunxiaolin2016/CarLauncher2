// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: launcher_dump.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "launcher_dump.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace model {

namespace {

const ::google::protobuf::Descriptor* DumpTarget_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DumpTarget_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* DumpTarget_Type_descriptor_ = NULL;
const ::google::protobuf::Descriptor* LauncherImpression_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LauncherImpression_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ItemType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ContainerType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* UserType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_launcher_5fdump_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_launcher_5fdump_2eproto() {
  protobuf_AddDesc_launcher_5fdump_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "launcher_dump.proto");
  GOOGLE_CHECK(file != NULL);
  DumpTarget_descriptor_ = file->message_type(0);
  static const int DumpTarget_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DumpTarget, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DumpTarget, page_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DumpTarget, grid_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DumpTarget, grid_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DumpTarget, container_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DumpTarget, item_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DumpTarget, package_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DumpTarget, component_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DumpTarget, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DumpTarget, span_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DumpTarget, span_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DumpTarget, user_type_),
  };
  DumpTarget_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DumpTarget_descriptor_,
      DumpTarget::internal_default_instance(),
      DumpTarget_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DumpTarget, _has_bits_),
      -1,
      -1,
      sizeof(DumpTarget),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DumpTarget, _internal_metadata_));
  DumpTarget_Type_descriptor_ = DumpTarget_descriptor_->enum_type(0);
  LauncherImpression_descriptor_ = file->message_type(1);
  static const int LauncherImpression_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LauncherImpression, targets_),
  };
  LauncherImpression_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LauncherImpression_descriptor_,
      LauncherImpression::internal_default_instance(),
      LauncherImpression_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LauncherImpression, _has_bits_),
      -1,
      -1,
      sizeof(LauncherImpression),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LauncherImpression, _internal_metadata_));
  ItemType_descriptor_ = file->enum_type(0);
  ContainerType_descriptor_ = file->enum_type(1);
  UserType_descriptor_ = file->enum_type(2);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_launcher_5fdump_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DumpTarget_descriptor_, DumpTarget::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LauncherImpression_descriptor_, LauncherImpression::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_launcher_5fdump_2eproto() {
  DumpTarget_default_instance_.Shutdown();
  delete DumpTarget_reflection_;
  LauncherImpression_default_instance_.Shutdown();
  delete LauncherImpression_reflection_;
}

void protobuf_InitDefaults_launcher_5fdump_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  DumpTarget_default_instance_.DefaultConstruct();
  LauncherImpression_default_instance_.DefaultConstruct();
  DumpTarget_default_instance_.get_mutable()->InitAsDefaultInstance();
  LauncherImpression_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_launcher_5fdump_2eproto_once_);
void protobuf_InitDefaults_launcher_5fdump_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_launcher_5fdump_2eproto_once_,
                 &protobuf_InitDefaults_launcher_5fdump_2eproto_impl);
}
void protobuf_AddDesc_launcher_5fdump_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_launcher_5fdump_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023launcher_dump.proto\022\005model\"\344\002\n\nDumpTar"
    "get\022$\n\004type\030\001 \001(\0162\026.model.DumpTarget.Typ"
    "e\022\017\n\007page_id\030\002 \001(\005\022\016\n\006grid_x\030\003 \001(\005\022\016\n\006gr"
    "id_y\030\004 \001(\005\022,\n\016container_type\030\005 \001(\0162\024.mod"
    "el.ContainerType\022\"\n\titem_type\030\006 \001(\0162\017.mo"
    "del.ItemType\022\024\n\014package_name\030\007 \001(\t\022\021\n\tco"
    "mponent\030\010 \001(\t\022\017\n\007item_id\030\t \001(\t\022\021\n\006span_x"
    "\030\n \001(\005:\0011\022\021\n\006span_y\030\013 \001(\005:\0011\022\"\n\tuser_typ"
    "e\030\014 \001(\0162\017.model.UserType\")\n\004Type\022\010\n\004NONE"
    "\020\000\022\010\n\004ITEM\020\001\022\r\n\tCONTAINER\020\002\"8\n\022LauncherI"
    "mpression\022\"\n\007targets\030\001 \003(\0132\021.model.DumpT"
    "arget*H\n\010ItemType\022\024\n\020UNKNOWN_ITEMTYPE\020\000\022"
    "\014\n\010APP_ICON\020\001\022\n\n\006WIDGET\020\002\022\014\n\010SHORTCUT\020\003*"
    "R\n\rContainerType\022\031\n\025UNKNOWN_CONTAINERTYP"
    "E\020\000\022\r\n\tWORKSPACE\020\001\022\013\n\007HOTSEAT\020\002\022\n\n\006FOLDE"
    "R\020\003*!\n\010UserType\022\013\n\007DEFAULT\020\000\022\010\n\004WORK\020\001B0"
    "\n\033com.android.launcher3.modelB\021LauncherD"
    "umpProto", 688);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "launcher_dump.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_launcher_5fdump_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_launcher_5fdump_2eproto_once_);
void protobuf_AddDesc_launcher_5fdump_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_launcher_5fdump_2eproto_once_,
                 &protobuf_AddDesc_launcher_5fdump_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_launcher_5fdump_2eproto {
  StaticDescriptorInitializer_launcher_5fdump_2eproto() {
    protobuf_AddDesc_launcher_5fdump_2eproto();
  }
} static_descriptor_initializer_launcher_5fdump_2eproto_;
const ::google::protobuf::EnumDescriptor* ItemType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemType_descriptor_;
}
bool ItemType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ContainerType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ContainerType_descriptor_;
}
bool ContainerType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* UserType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserType_descriptor_;
}
bool UserType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

const ::google::protobuf::EnumDescriptor* DumpTarget_Type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DumpTarget_Type_descriptor_;
}
bool DumpTarget_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DumpTarget_Type DumpTarget::NONE;
const DumpTarget_Type DumpTarget::ITEM;
const DumpTarget_Type DumpTarget::CONTAINER;
const DumpTarget_Type DumpTarget::Type_MIN;
const DumpTarget_Type DumpTarget::Type_MAX;
const int DumpTarget::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DumpTarget::kTypeFieldNumber;
const int DumpTarget::kPageIdFieldNumber;
const int DumpTarget::kGridXFieldNumber;
const int DumpTarget::kGridYFieldNumber;
const int DumpTarget::kContainerTypeFieldNumber;
const int DumpTarget::kItemTypeFieldNumber;
const int DumpTarget::kPackageNameFieldNumber;
const int DumpTarget::kComponentFieldNumber;
const int DumpTarget::kItemIdFieldNumber;
const int DumpTarget::kSpanXFieldNumber;
const int DumpTarget::kSpanYFieldNumber;
const int DumpTarget::kUserTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DumpTarget::DumpTarget()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_launcher_5fdump_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:model.DumpTarget)
}

void DumpTarget::InitAsDefaultInstance() {
}

DumpTarget::DumpTarget(const DumpTarget& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:model.DumpTarget)
}

void DumpTarget::SharedCtor() {
  _cached_size_ = 0;
  package_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  component_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, reinterpret_cast<char*>(&user_type_) -
    reinterpret_cast<char*>(&type_) + sizeof(user_type_));
  span_x_ = 1;
  span_y_ = 1;
}

DumpTarget::~DumpTarget() {
  // @@protoc_insertion_point(destructor:model.DumpTarget)
  SharedDtor();
}

void DumpTarget::SharedDtor() {
  package_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  component_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DumpTarget::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DumpTarget::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DumpTarget_descriptor_;
}

const DumpTarget& DumpTarget::default_instance() {
  protobuf_InitDefaults_launcher_5fdump_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<DumpTarget> DumpTarget_default_instance_;

DumpTarget* DumpTarget::New(::google::protobuf::Arena* arena) const {
  DumpTarget* n = new DumpTarget;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DumpTarget::Clear() {
// @@protoc_insertion_point(message_clear_start:model.DumpTarget)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(DumpTarget, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DumpTarget*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(type_, item_type_);
    if (has_package_name()) {
      package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_component()) {
      component_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 3840u) {
    if (has_item_id()) {
      item_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    span_x_ = 1;
    span_y_ = 1;
    user_type_ = 0;
  }

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DumpTarget::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:model.DumpTarget)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .model.DumpTarget.Type type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::model::DumpTarget_Type_IsValid(value)) {
            set_type(static_cast< ::model::DumpTarget_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_page_id;
        break;
      }

      // optional int32 page_id = 2;
      case 2: {
        if (tag == 16) {
         parse_page_id:
          set_has_page_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_grid_x;
        break;
      }

      // optional int32 grid_x = 3;
      case 3: {
        if (tag == 24) {
         parse_grid_x:
          set_has_grid_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &grid_x_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_grid_y;
        break;
      }

      // optional int32 grid_y = 4;
      case 4: {
        if (tag == 32) {
         parse_grid_y:
          set_has_grid_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &grid_y_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_container_type;
        break;
      }

      // optional .model.ContainerType container_type = 5;
      case 5: {
        if (tag == 40) {
         parse_container_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::model::ContainerType_IsValid(value)) {
            set_container_type(static_cast< ::model::ContainerType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_item_type;
        break;
      }

      // optional .model.ItemType item_type = 6;
      case 6: {
        if (tag == 48) {
         parse_item_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::model::ItemType_IsValid(value)) {
            set_item_type(static_cast< ::model::ItemType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_package_name;
        break;
      }

      // optional string package_name = 7;
      case 7: {
        if (tag == 58) {
         parse_package_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_package_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->package_name().data(), this->package_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "model.DumpTarget.package_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_component;
        break;
      }

      // optional string component = 8;
      case 8: {
        if (tag == 66) {
         parse_component:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_component()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->component().data(), this->component().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "model.DumpTarget.component");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_item_id;
        break;
      }

      // optional string item_id = 9;
      case 9: {
        if (tag == 74) {
         parse_item_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_id().data(), this->item_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "model.DumpTarget.item_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_span_x;
        break;
      }

      // optional int32 span_x = 10 [default = 1];
      case 10: {
        if (tag == 80) {
         parse_span_x:
          set_has_span_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &span_x_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_span_y;
        break;
      }

      // optional int32 span_y = 11 [default = 1];
      case 11: {
        if (tag == 88) {
         parse_span_y:
          set_has_span_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &span_y_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_user_type;
        break;
      }

      // optional .model.UserType user_type = 12;
      case 12: {
        if (tag == 96) {
         parse_user_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::model::UserType_IsValid(value)) {
            set_user_type(static_cast< ::model::UserType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(12, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:model.DumpTarget)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:model.DumpTarget)
  return false;
#undef DO_
}

void DumpTarget::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:model.DumpTarget)
  // optional .model.DumpTarget.Type type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional int32 page_id = 2;
  if (has_page_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->page_id(), output);
  }

  // optional int32 grid_x = 3;
  if (has_grid_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->grid_x(), output);
  }

  // optional int32 grid_y = 4;
  if (has_grid_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->grid_y(), output);
  }

  // optional .model.ContainerType container_type = 5;
  if (has_container_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->container_type(), output);
  }

  // optional .model.ItemType item_type = 6;
  if (has_item_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->item_type(), output);
  }

  // optional string package_name = 7;
  if (has_package_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->package_name().data(), this->package_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "model.DumpTarget.package_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->package_name(), output);
  }

  // optional string component = 8;
  if (has_component()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->component().data(), this->component().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "model.DumpTarget.component");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->component(), output);
  }

  // optional string item_id = 9;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_id().data(), this->item_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "model.DumpTarget.item_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->item_id(), output);
  }

  // optional int32 span_x = 10 [default = 1];
  if (has_span_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->span_x(), output);
  }

  // optional int32 span_y = 11 [default = 1];
  if (has_span_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->span_y(), output);
  }

  // optional .model.UserType user_type = 12;
  if (has_user_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      12, this->user_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:model.DumpTarget)
}

::google::protobuf::uint8* DumpTarget::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:model.DumpTarget)
  // optional .model.DumpTarget.Type type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional int32 page_id = 2;
  if (has_page_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->page_id(), target);
  }

  // optional int32 grid_x = 3;
  if (has_grid_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->grid_x(), target);
  }

  // optional int32 grid_y = 4;
  if (has_grid_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->grid_y(), target);
  }

  // optional .model.ContainerType container_type = 5;
  if (has_container_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->container_type(), target);
  }

  // optional .model.ItemType item_type = 6;
  if (has_item_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->item_type(), target);
  }

  // optional string package_name = 7;
  if (has_package_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->package_name().data(), this->package_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "model.DumpTarget.package_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->package_name(), target);
  }

  // optional string component = 8;
  if (has_component()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->component().data(), this->component().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "model.DumpTarget.component");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->component(), target);
  }

  // optional string item_id = 9;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_id().data(), this->item_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "model.DumpTarget.item_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->item_id(), target);
  }

  // optional int32 span_x = 10 [default = 1];
  if (has_span_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->span_x(), target);
  }

  // optional int32 span_y = 11 [default = 1];
  if (has_span_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->span_y(), target);
  }

  // optional .model.UserType user_type = 12;
  if (has_user_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      12, this->user_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:model.DumpTarget)
  return target;
}

size_t DumpTarget::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:model.DumpTarget)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional .model.DumpTarget.Type type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional int32 page_id = 2;
    if (has_page_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page_id());
    }

    // optional int32 grid_x = 3;
    if (has_grid_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->grid_x());
    }

    // optional int32 grid_y = 4;
    if (has_grid_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->grid_y());
    }

    // optional .model.ContainerType container_type = 5;
    if (has_container_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->container_type());
    }

    // optional .model.ItemType item_type = 6;
    if (has_item_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->item_type());
    }

    // optional string package_name = 7;
    if (has_package_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->package_name());
    }

    // optional string component = 8;
    if (has_component()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->component());
    }

  }
  if (_has_bits_[8 / 32] & 3840u) {
    // optional string item_id = 9;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_id());
    }

    // optional int32 span_x = 10 [default = 1];
    if (has_span_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->span_x());
    }

    // optional int32 span_y = 11 [default = 1];
    if (has_span_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->span_y());
    }

    // optional .model.UserType user_type = 12;
    if (has_user_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->user_type());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DumpTarget::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:model.DumpTarget)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DumpTarget* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DumpTarget>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:model.DumpTarget)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:model.DumpTarget)
    UnsafeMergeFrom(*source);
  }
}

void DumpTarget::MergeFrom(const DumpTarget& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:model.DumpTarget)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void DumpTarget::UnsafeMergeFrom(const DumpTarget& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_page_id()) {
      set_page_id(from.page_id());
    }
    if (from.has_grid_x()) {
      set_grid_x(from.grid_x());
    }
    if (from.has_grid_y()) {
      set_grid_y(from.grid_y());
    }
    if (from.has_container_type()) {
      set_container_type(from.container_type());
    }
    if (from.has_item_type()) {
      set_item_type(from.item_type());
    }
    if (from.has_package_name()) {
      set_has_package_name();
      package_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.package_name_);
    }
    if (from.has_component()) {
      set_has_component();
      component_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.component_);
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_item_id()) {
      set_has_item_id();
      item_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_id_);
    }
    if (from.has_span_x()) {
      set_span_x(from.span_x());
    }
    if (from.has_span_y()) {
      set_span_y(from.span_y());
    }
    if (from.has_user_type()) {
      set_user_type(from.user_type());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void DumpTarget::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:model.DumpTarget)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DumpTarget::CopyFrom(const DumpTarget& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:model.DumpTarget)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool DumpTarget::IsInitialized() const {

  return true;
}

void DumpTarget::Swap(DumpTarget* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DumpTarget::InternalSwap(DumpTarget* other) {
  std::swap(type_, other->type_);
  std::swap(page_id_, other->page_id_);
  std::swap(grid_x_, other->grid_x_);
  std::swap(grid_y_, other->grid_y_);
  std::swap(container_type_, other->container_type_);
  std::swap(item_type_, other->item_type_);
  package_name_.Swap(&other->package_name_);
  component_.Swap(&other->component_);
  item_id_.Swap(&other->item_id_);
  std::swap(span_x_, other->span_x_);
  std::swap(span_y_, other->span_y_);
  std::swap(user_type_, other->user_type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DumpTarget::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DumpTarget_descriptor_;
  metadata.reflection = DumpTarget_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DumpTarget

// optional .model.DumpTarget.Type type = 1;
bool DumpTarget::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DumpTarget::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void DumpTarget::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void DumpTarget::clear_type() {
  type_ = 0;
  clear_has_type();
}
::model::DumpTarget_Type DumpTarget::type() const {
  // @@protoc_insertion_point(field_get:model.DumpTarget.type)
  return static_cast< ::model::DumpTarget_Type >(type_);
}
void DumpTarget::set_type(::model::DumpTarget_Type value) {
  assert(::model::DumpTarget_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:model.DumpTarget.type)
}

// optional int32 page_id = 2;
bool DumpTarget::has_page_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DumpTarget::set_has_page_id() {
  _has_bits_[0] |= 0x00000002u;
}
void DumpTarget::clear_has_page_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void DumpTarget::clear_page_id() {
  page_id_ = 0;
  clear_has_page_id();
}
::google::protobuf::int32 DumpTarget::page_id() const {
  // @@protoc_insertion_point(field_get:model.DumpTarget.page_id)
  return page_id_;
}
void DumpTarget::set_page_id(::google::protobuf::int32 value) {
  set_has_page_id();
  page_id_ = value;
  // @@protoc_insertion_point(field_set:model.DumpTarget.page_id)
}

// optional int32 grid_x = 3;
bool DumpTarget::has_grid_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void DumpTarget::set_has_grid_x() {
  _has_bits_[0] |= 0x00000004u;
}
void DumpTarget::clear_has_grid_x() {
  _has_bits_[0] &= ~0x00000004u;
}
void DumpTarget::clear_grid_x() {
  grid_x_ = 0;
  clear_has_grid_x();
}
::google::protobuf::int32 DumpTarget::grid_x() const {
  // @@protoc_insertion_point(field_get:model.DumpTarget.grid_x)
  return grid_x_;
}
void DumpTarget::set_grid_x(::google::protobuf::int32 value) {
  set_has_grid_x();
  grid_x_ = value;
  // @@protoc_insertion_point(field_set:model.DumpTarget.grid_x)
}

// optional int32 grid_y = 4;
bool DumpTarget::has_grid_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void DumpTarget::set_has_grid_y() {
  _has_bits_[0] |= 0x00000008u;
}
void DumpTarget::clear_has_grid_y() {
  _has_bits_[0] &= ~0x00000008u;
}
void DumpTarget::clear_grid_y() {
  grid_y_ = 0;
  clear_has_grid_y();
}
::google::protobuf::int32 DumpTarget::grid_y() const {
  // @@protoc_insertion_point(field_get:model.DumpTarget.grid_y)
  return grid_y_;
}
void DumpTarget::set_grid_y(::google::protobuf::int32 value) {
  set_has_grid_y();
  grid_y_ = value;
  // @@protoc_insertion_point(field_set:model.DumpTarget.grid_y)
}

// optional .model.ContainerType container_type = 5;
bool DumpTarget::has_container_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void DumpTarget::set_has_container_type() {
  _has_bits_[0] |= 0x00000010u;
}
void DumpTarget::clear_has_container_type() {
  _has_bits_[0] &= ~0x00000010u;
}
void DumpTarget::clear_container_type() {
  container_type_ = 0;
  clear_has_container_type();
}
::model::ContainerType DumpTarget::container_type() const {
  // @@protoc_insertion_point(field_get:model.DumpTarget.container_type)
  return static_cast< ::model::ContainerType >(container_type_);
}
void DumpTarget::set_container_type(::model::ContainerType value) {
  assert(::model::ContainerType_IsValid(value));
  set_has_container_type();
  container_type_ = value;
  // @@protoc_insertion_point(field_set:model.DumpTarget.container_type)
}

// optional .model.ItemType item_type = 6;
bool DumpTarget::has_item_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void DumpTarget::set_has_item_type() {
  _has_bits_[0] |= 0x00000020u;
}
void DumpTarget::clear_has_item_type() {
  _has_bits_[0] &= ~0x00000020u;
}
void DumpTarget::clear_item_type() {
  item_type_ = 0;
  clear_has_item_type();
}
::model::ItemType DumpTarget::item_type() const {
  // @@protoc_insertion_point(field_get:model.DumpTarget.item_type)
  return static_cast< ::model::ItemType >(item_type_);
}
void DumpTarget::set_item_type(::model::ItemType value) {
  assert(::model::ItemType_IsValid(value));
  set_has_item_type();
  item_type_ = value;
  // @@protoc_insertion_point(field_set:model.DumpTarget.item_type)
}

// optional string package_name = 7;
bool DumpTarget::has_package_name() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void DumpTarget::set_has_package_name() {
  _has_bits_[0] |= 0x00000040u;
}
void DumpTarget::clear_has_package_name() {
  _has_bits_[0] &= ~0x00000040u;
}
void DumpTarget::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_package_name();
}
const ::std::string& DumpTarget::package_name() const {
  // @@protoc_insertion_point(field_get:model.DumpTarget.package_name)
  return package_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DumpTarget::set_package_name(const ::std::string& value) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:model.DumpTarget.package_name)
}
void DumpTarget::set_package_name(const char* value) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:model.DumpTarget.package_name)
}
void DumpTarget::set_package_name(const char* value, size_t size) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:model.DumpTarget.package_name)
}
::std::string* DumpTarget::mutable_package_name() {
  set_has_package_name();
  // @@protoc_insertion_point(field_mutable:model.DumpTarget.package_name)
  return package_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DumpTarget::release_package_name() {
  // @@protoc_insertion_point(field_release:model.DumpTarget.package_name)
  clear_has_package_name();
  return package_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DumpTarget::set_allocated_package_name(::std::string* package_name) {
  if (package_name != NULL) {
    set_has_package_name();
  } else {
    clear_has_package_name();
  }
  package_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:model.DumpTarget.package_name)
}

// optional string component = 8;
bool DumpTarget::has_component() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void DumpTarget::set_has_component() {
  _has_bits_[0] |= 0x00000080u;
}
void DumpTarget::clear_has_component() {
  _has_bits_[0] &= ~0x00000080u;
}
void DumpTarget::clear_component() {
  component_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_component();
}
const ::std::string& DumpTarget::component() const {
  // @@protoc_insertion_point(field_get:model.DumpTarget.component)
  return component_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DumpTarget::set_component(const ::std::string& value) {
  set_has_component();
  component_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:model.DumpTarget.component)
}
void DumpTarget::set_component(const char* value) {
  set_has_component();
  component_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:model.DumpTarget.component)
}
void DumpTarget::set_component(const char* value, size_t size) {
  set_has_component();
  component_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:model.DumpTarget.component)
}
::std::string* DumpTarget::mutable_component() {
  set_has_component();
  // @@protoc_insertion_point(field_mutable:model.DumpTarget.component)
  return component_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DumpTarget::release_component() {
  // @@protoc_insertion_point(field_release:model.DumpTarget.component)
  clear_has_component();
  return component_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DumpTarget::set_allocated_component(::std::string* component) {
  if (component != NULL) {
    set_has_component();
  } else {
    clear_has_component();
  }
  component_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), component);
  // @@protoc_insertion_point(field_set_allocated:model.DumpTarget.component)
}

// optional string item_id = 9;
bool DumpTarget::has_item_id() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void DumpTarget::set_has_item_id() {
  _has_bits_[0] |= 0x00000100u;
}
void DumpTarget::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000100u;
}
void DumpTarget::clear_item_id() {
  item_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_id();
}
const ::std::string& DumpTarget::item_id() const {
  // @@protoc_insertion_point(field_get:model.DumpTarget.item_id)
  return item_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DumpTarget::set_item_id(const ::std::string& value) {
  set_has_item_id();
  item_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:model.DumpTarget.item_id)
}
void DumpTarget::set_item_id(const char* value) {
  set_has_item_id();
  item_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:model.DumpTarget.item_id)
}
void DumpTarget::set_item_id(const char* value, size_t size) {
  set_has_item_id();
  item_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:model.DumpTarget.item_id)
}
::std::string* DumpTarget::mutable_item_id() {
  set_has_item_id();
  // @@protoc_insertion_point(field_mutable:model.DumpTarget.item_id)
  return item_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DumpTarget::release_item_id() {
  // @@protoc_insertion_point(field_release:model.DumpTarget.item_id)
  clear_has_item_id();
  return item_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DumpTarget::set_allocated_item_id(::std::string* item_id) {
  if (item_id != NULL) {
    set_has_item_id();
  } else {
    clear_has_item_id();
  }
  item_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_id);
  // @@protoc_insertion_point(field_set_allocated:model.DumpTarget.item_id)
}

// optional int32 span_x = 10 [default = 1];
bool DumpTarget::has_span_x() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void DumpTarget::set_has_span_x() {
  _has_bits_[0] |= 0x00000200u;
}
void DumpTarget::clear_has_span_x() {
  _has_bits_[0] &= ~0x00000200u;
}
void DumpTarget::clear_span_x() {
  span_x_ = 1;
  clear_has_span_x();
}
::google::protobuf::int32 DumpTarget::span_x() const {
  // @@protoc_insertion_point(field_get:model.DumpTarget.span_x)
  return span_x_;
}
void DumpTarget::set_span_x(::google::protobuf::int32 value) {
  set_has_span_x();
  span_x_ = value;
  // @@protoc_insertion_point(field_set:model.DumpTarget.span_x)
}

// optional int32 span_y = 11 [default = 1];
bool DumpTarget::has_span_y() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void DumpTarget::set_has_span_y() {
  _has_bits_[0] |= 0x00000400u;
}
void DumpTarget::clear_has_span_y() {
  _has_bits_[0] &= ~0x00000400u;
}
void DumpTarget::clear_span_y() {
  span_y_ = 1;
  clear_has_span_y();
}
::google::protobuf::int32 DumpTarget::span_y() const {
  // @@protoc_insertion_point(field_get:model.DumpTarget.span_y)
  return span_y_;
}
void DumpTarget::set_span_y(::google::protobuf::int32 value) {
  set_has_span_y();
  span_y_ = value;
  // @@protoc_insertion_point(field_set:model.DumpTarget.span_y)
}

// optional .model.UserType user_type = 12;
bool DumpTarget::has_user_type() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void DumpTarget::set_has_user_type() {
  _has_bits_[0] |= 0x00000800u;
}
void DumpTarget::clear_has_user_type() {
  _has_bits_[0] &= ~0x00000800u;
}
void DumpTarget::clear_user_type() {
  user_type_ = 0;
  clear_has_user_type();
}
::model::UserType DumpTarget::user_type() const {
  // @@protoc_insertion_point(field_get:model.DumpTarget.user_type)
  return static_cast< ::model::UserType >(user_type_);
}
void DumpTarget::set_user_type(::model::UserType value) {
  assert(::model::UserType_IsValid(value));
  set_has_user_type();
  user_type_ = value;
  // @@protoc_insertion_point(field_set:model.DumpTarget.user_type)
}

inline const DumpTarget* DumpTarget::internal_default_instance() {
  return &DumpTarget_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LauncherImpression::kTargetsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LauncherImpression::LauncherImpression()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_launcher_5fdump_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:model.LauncherImpression)
}

void LauncherImpression::InitAsDefaultInstance() {
}

LauncherImpression::LauncherImpression(const LauncherImpression& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:model.LauncherImpression)
}

void LauncherImpression::SharedCtor() {
  _cached_size_ = 0;
}

LauncherImpression::~LauncherImpression() {
  // @@protoc_insertion_point(destructor:model.LauncherImpression)
  SharedDtor();
}

void LauncherImpression::SharedDtor() {
}

void LauncherImpression::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LauncherImpression::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LauncherImpression_descriptor_;
}

const LauncherImpression& LauncherImpression::default_instance() {
  protobuf_InitDefaults_launcher_5fdump_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<LauncherImpression> LauncherImpression_default_instance_;

LauncherImpression* LauncherImpression::New(::google::protobuf::Arena* arena) const {
  LauncherImpression* n = new LauncherImpression;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LauncherImpression::Clear() {
// @@protoc_insertion_point(message_clear_start:model.LauncherImpression)
  targets_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LauncherImpression::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:model.LauncherImpression)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .model.DumpTarget targets = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_targets:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_targets()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_targets;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:model.LauncherImpression)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:model.LauncherImpression)
  return false;
#undef DO_
}

void LauncherImpression::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:model.LauncherImpression)
  // repeated .model.DumpTarget targets = 1;
  for (unsigned int i = 0, n = this->targets_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->targets(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:model.LauncherImpression)
}

::google::protobuf::uint8* LauncherImpression::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:model.LauncherImpression)
  // repeated .model.DumpTarget targets = 1;
  for (unsigned int i = 0, n = this->targets_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->targets(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:model.LauncherImpression)
  return target;
}

size_t LauncherImpression::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:model.LauncherImpression)
  size_t total_size = 0;

  // repeated .model.DumpTarget targets = 1;
  {
    unsigned int count = this->targets_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->targets(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LauncherImpression::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:model.LauncherImpression)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const LauncherImpression* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LauncherImpression>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:model.LauncherImpression)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:model.LauncherImpression)
    UnsafeMergeFrom(*source);
  }
}

void LauncherImpression::MergeFrom(const LauncherImpression& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:model.LauncherImpression)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void LauncherImpression::UnsafeMergeFrom(const LauncherImpression& from) {
  GOOGLE_DCHECK(&from != this);
  targets_.MergeFrom(from.targets_);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void LauncherImpression::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:model.LauncherImpression)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LauncherImpression::CopyFrom(const LauncherImpression& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:model.LauncherImpression)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool LauncherImpression::IsInitialized() const {

  return true;
}

void LauncherImpression::Swap(LauncherImpression* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LauncherImpression::InternalSwap(LauncherImpression* other) {
  targets_.UnsafeArenaSwap(&other->targets_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LauncherImpression::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LauncherImpression_descriptor_;
  metadata.reflection = LauncherImpression_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LauncherImpression

// repeated .model.DumpTarget targets = 1;
int LauncherImpression::targets_size() const {
  return targets_.size();
}
void LauncherImpression::clear_targets() {
  targets_.Clear();
}
const ::model::DumpTarget& LauncherImpression::targets(int index) const {
  // @@protoc_insertion_point(field_get:model.LauncherImpression.targets)
  return targets_.Get(index);
}
::model::DumpTarget* LauncherImpression::mutable_targets(int index) {
  // @@protoc_insertion_point(field_mutable:model.LauncherImpression.targets)
  return targets_.Mutable(index);
}
::model::DumpTarget* LauncherImpression::add_targets() {
  // @@protoc_insertion_point(field_add:model.LauncherImpression.targets)
  return targets_.Add();
}
::google::protobuf::RepeatedPtrField< ::model::DumpTarget >*
LauncherImpression::mutable_targets() {
  // @@protoc_insertion_point(field_mutable_list:model.LauncherImpression.targets)
  return &targets_;
}
const ::google::protobuf::RepeatedPtrField< ::model::DumpTarget >&
LauncherImpression::targets() const {
  // @@protoc_insertion_point(field_list:model.LauncherImpression.targets)
  return targets_;
}

inline const LauncherImpression* LauncherImpression::internal_default_instance() {
  return &LauncherImpression_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace model

// @@protoc_insertion_point(global_scope)
